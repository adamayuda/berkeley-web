[{"/Users/Adam/Documents/berkeley/src/index.tsx":"1","/Users/Adam/Documents/berkeley/src/app/index.tsx":"2","/Users/Adam/Documents/berkeley/src/components/nav/index.tsx":"3","/Users/Adam/Documents/berkeley/src/redux/index.ts":"4","/Users/Adam/Documents/berkeley/src/redux/reducers/device/index.ts":"5","/Users/Adam/Documents/berkeley/src/components/navBottom/index.tsx":"6","/Users/Adam/Documents/berkeley/src/components/loading/index.tsx":"7","/Users/Adam/Documents/berkeley/src/components/post/index.tsx":"8","/Users/Adam/Documents/berkeley/src/redux/reducers/user/index.ts":"9","/Users/Adam/Documents/berkeley/src/redux/reducers/index.ts":"10","/Users/Adam/Documents/berkeley/src/pages/home/index.tsx":"11"},{"size":377,"mtime":1610621946863,"results":"12","hashOfConfig":"13"},{"size":2039,"mtime":1610720826186,"results":"14","hashOfConfig":"13"},{"size":989,"mtime":1610624947195,"results":"15","hashOfConfig":"13"},{"size":884,"mtime":1610716138328,"results":"16","hashOfConfig":"13"},{"size":392,"mtime":1610720746490,"results":"17","hashOfConfig":"13"},{"size":627,"mtime":1610626200645,"results":"18","hashOfConfig":"13"},{"size":282,"mtime":1610718141399,"results":"19","hashOfConfig":"13"},{"size":1907,"mtime":1610717895599,"results":"20","hashOfConfig":"13"},{"size":369,"mtime":1610694710064,"results":"21","hashOfConfig":"13"},{"size":175,"mtime":1610683308769,"results":"22","hashOfConfig":"13"},{"size":2541,"mtime":1610717422367,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1xoklq6",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/Adam/Documents/berkeley/src/index.tsx",[],[],"/Users/Adam/Documents/berkeley/src/app/index.tsx",[],"/Users/Adam/Documents/berkeley/src/components/nav/index.tsx",[],"/Users/Adam/Documents/berkeley/src/redux/index.ts",[],"/Users/Adam/Documents/berkeley/src/redux/reducers/device/index.ts",[],"/Users/Adam/Documents/berkeley/src/components/navBottom/index.tsx",[],"/Users/Adam/Documents/berkeley/src/components/loading/index.tsx",[],"/Users/Adam/Documents/berkeley/src/components/post/index.tsx",["48"],"import \"src/components/post/style.sass\";\n\nimport React, { FC } from \"react\";\nimport PropTypes from \"prop-types\";\nimport add from \"src/assets/svg/add.svg\";\nimport bookmark from \"src/assets/svg/bookmark.svg\";\nimport comment from \"src/assets/svg/comment.svg\";\nimport heart from \"src/assets/svg/heart.svg\";\nimport send from \"src/assets/svg/send.svg\";\n\nexport interface IPost {\n  user: IUser;\n  photo: string;\n  likes: number;\n  comments: IComment[];\n  createdAt: Date;\n}\n\nexport interface IComment {\n  username: string;\n  content: string;\n  createdAt: Date;\n}\n\nexport interface IUser {\n  picture: string;\n  username: string;\n}\n\ninterface IPostProps {\n  post: IPost;\n}\n\nexport const Post: FC<IPostProps> = ({ post }) => {\n  return (\n    <div className=\"post\">\n      <div className=\"user\">\n        <img src={post.user.picture} alt=\"\" />\n        <strong>{post.user.username}</strong>\n      </div>\n      <img src={post.photo} className=\"photo\" alt=\"\" />\n      <div className=\"postContent\">\n        <div className=\"actions\">\n          <div>\n            <img src={heart} alt=\"LinkedTeam\" />\n            <img src={comment} alt=\"LinkedTeam\" />\n            <img src={send} alt=\"LinkedTeam\" />\n          </div>\n          <img src={bookmark} alt=\"LinkedTeam\" />\n        </div>\n        <div className=\"likes\">\n          <strong>{post.likes} likes</strong>\n        </div>\n        <div className=\"comments\">\n          {post.comments.map((comment: IComment, index: number) => {\n            return (\n              <div key={`route-${index}`} className=\"comment\">\n                <div>\n                  <strong>{comment.username}</strong>\n                  <span>{comment.content}</span>\n                </div>\n                <img src={heart} alt=\"LinkedTeam\" />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      {/*<div className=\"createdAt\">{post.createdAt}</div>*/}\n    </div>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.any,\n};\n","/Users/Adam/Documents/berkeley/src/redux/reducers/user/index.ts",[],"/Users/Adam/Documents/berkeley/src/redux/reducers/index.ts",[],"/Users/Adam/Documents/berkeley/src/pages/home/index.tsx",[],{"ruleId":"49","severity":1,"message":"50","line":5,"column":8,"nodeType":"51","messageId":"52","endLine":5,"endColumn":11},"@typescript-eslint/no-unused-vars","'add' is defined but never used.","Identifier","unusedVar"]